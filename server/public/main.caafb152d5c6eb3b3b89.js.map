{"version":3,"sources":["webpack://catan-clone/./client/components/room.jsx","webpack://catan-clone/./client/components/chat/useChat.jsx","webpack://catan-clone/./client/components/chat/chat.jsx","webpack://catan-clone/./client/components/board/hex.jsx","webpack://catan-clone/./client/components/board/board.jsx","webpack://catan-clone/./client/components/app.jsx","webpack://catan-clone/./client/index.jsx"],"names":["handleUsernameChange","event","setUsername","target","value","handleRoomNameChange","setRoomName","sendInfo","props","setRoomId","roomName","username","React","className","type","placeholder","onChange","to","onClick","NEW_CHAT_MESSAGE_EVENT","roomId","useState","messages","setMessages","socketRef","useRef","useEffect","current","socketIOClient","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body","useChat","newMessage","setNewMessage","map","i","key","hexStyle","top","position","left","style","hexResources","hexes","coordinates","hexIndex","Object","entries","resourceIndex","hexProps","push","initializeHexes","lumber","clay","sheep","wheat","ore","desert","console","log","boardProps","roomProps","chatProps","exact","path","ReactDOM","document","querySelector"],"mappings":"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","file":"main.caafb152d5c6eb3b3b89.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Room = (props) => {\n  const [roomName, setRoomName] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"\");\n\n  return (\n    <div className=\"home-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Room\"\n        value={roomName}\n        onChange={handleRoomNameChange}\n        className=\"text-input-field\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={handleUsernameChange}\n        className=\"text-input-field\"\n      />\n      <Link\n        to={`/${roomName}`}\n        onClick={sendInfo}\n        className=\"enter-room-button\">\n        Join room\n      </Link>\n    </div>\n  );\n};\n\nconst handleUsernameChange = (event) => {\n  setUsername(event.target.value);\n};\n\nconst handleRoomNameChange = (event) => {\n  setRoomName(event.target.value);\n};\n\nconst sendInfo = () => {\n  props.setRoomId(roomName);\n  props.setUsername(username);\n}\n\nexport default Room;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; // Name of the event\nconst SOCKET_SERVER_URL = \"http://localhost:3000\";\n\nconst useChat = (roomId, username) => {\n  const [messages, setMessages] = useState([]); // Sent and received messages\n  const socketRef = useRef();\n\n  useEffect(() => {\n\n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId, username },\n    });\n\n    // Listens for incoming messages\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    // Destroys the socket reference\n    // when the connection is closed\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  // Sends a message to the server that\n  // forwards it to all users in the same room\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;\n","// Chat inspired by code from Jakub Kozak: https://github.com/pixochi/socket.io-react-hooks-chat\n\nimport React from \"react\";\nimport useChat from \"./useChat\";\n\nconst Chat = (props) => {\n  const { roomId, username } = props; // Gets roomId from URL\n  const { messages, sendMessage } = useChat(roomId, username); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    sendMessage(newMessage);\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header-block\">\n        <h1 className=\"room-name\">Room: {roomId}</h1>\n        <h1 className=\"user-name\">User: {username}</h1>\n      </div>\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messages.map((message, i) => (\n            <li\n              key={i}\n              className={`message-item ${message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n                }`}>\n              <div className=\"message-header username\">\n                {message.username}\n              </div>\n              {message.body}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState } from \"react\";\n\nconst Hex = (props) => {\n\n  const hexStyle = {\n    top : props.position.top,\n    left: props.position.left\n  }\n\n  return (\n    <div className={`board-piece hex ${props.type}`}\n      style={hexStyle}></div>\n  );\n}\n\nexport default Hex;\n","import React, { useState } from \"react\";\nimport Hex from \"./hex\"\n\nconst Board = (props) => {\n\n  useEffect(() => {\n    const resources = initializeResources();\n    const hexes = initializeHexes(resources.hexes);\n  }, []);\n\n  console.log(hexes);\n\n  return (\n    <div>\n      {hexes}\n    </div>\n  );\n}\n\nconst initializeResources = () => {\n  return {\n    hexes: {\n      lumber: 4,\n      clay: 3,\n      sheep: 4,\n      wheat: 4,\n      ore: 3,\n      desert: 1\n    }\n  }\n}\n\nconst initializeHexes = (hexResources) => {\n  const hexes = [];\n  const coordinates = [\n    [\"50vh\", \"50vw\"], [\"50vh\", \"60vw\"], [\"55vh\", \"55vw\"],\n    [\"50vh\", \"45vw\"], [\"50vh\", \"40vw\"], [\"45vh\", \"45vw\"],\n    [\"45vh\", \"55vw\"], [\"50vh\", \"70vw\"], [\"60vh\", \"60vw\"],\n    [\"70vh\", \"60vw\"], [\"50vh\", \"50vw\"], [\"50vh\", \"60vw\"],\n    [\"50vh\", \"45vw\"], [\"50vh\", \"40vw\"], [\"45vh\", \"45vw\"],\n    [\"45vh\", \"55vw\"], [\"50vh\", \"70vw\"], [\"60vh\", \"60vw\"],\n    [\"70vh\", \"60vw\"]\n  ]\n\n  let hexIndex = 0;\n\n  for (const [key, value] of Object.entries(hexResources)){\n    for (let resourceIndex = value; resourceIndex > 0; resourceIndex--){\n      const hexProps = {\n        key: `${key}${resourceIndex}`,\n        type: key,\n        position: {\n          top: coordinates[hexIndex][0],\n          left: coordinates[hexIndex][1]\n        }\n      }\n      hexes.push(<Hex {...hexProps} />);\n      hexIndex++;\n    }\n  }\n\n  return (\n    {hexes}\n  )\n}\n\nexport default Board;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Room from \"./room\";\nimport Chat from \"./chat/chat\";\nimport Board from './board/board';\n\nconst App = () => {\n\n  const [roomId, setRoomId] = React.useState(\"\");\n  const [username, setUsername] = React.useState(\"\");\n\n  const boardProps = {\n\n  }\n\n  const roomProps = {\n    setRoomId: setRoomId,\n    setUsername: setUsername\n  }\n\n  const chatProps = {\n    roomId: roomId,\n    username: username\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Board {...boardProps} />\n        </Route>\n        <Route exact path=\"/room\">\n          <Room {...roomProps} />\n        </Route>\n        <Route exact path=\"/:roomId\">\n          <Chat {...chatProps}/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}